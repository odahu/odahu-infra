
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-addressable-resolver
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch

---

---

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: custom-metrics-server-resources
rules:
  - apiGroups:
      - custom.metrics.k8s.io
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-namespaced-admin
rules:
  - apiGroups:
      - serving.knative.dev
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-namespaced-edit
rules:
  - apiGroups:
      - serving.knative.dev
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - '*'
    verbs:
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-namespaced-view
rules:
  - apiGroups:
      - serving.knative.dev
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch

---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-admin
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    serving.knative.dev/controller: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-core
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - secrets
      - configmaps
      - endpoints
      - services
      - events
      - serviceaccounts
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints/restricted
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - serving.knative.dev
      - autoscaling.internal.knative.dev
      - networking.internal.knative.dev
    resources:
      - '*'
      - '*/status'
      - '*/finalizers'
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - patch
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/podspecable: "true"
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-podspecable-binding
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - configurations
      - services
    verbs:
      - list
      - watch
      - patch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: controller
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: custom-metrics:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: hpa-controller-custom-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-server-resources
subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: knative-serving-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-admin
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: custom-metrics-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}

---

---

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: certificates.networking.internal.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: Certificate
    plural: certificates
    shortNames:
      - kcert
    singular: certificate
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/podspecable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: configurations.serving.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.latestCreatedRevisionName
      name: LatestCreated
      type: string
    - JSONPath: .status.latestReadyRevisionName
      name: LatestReady
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Configuration
    plural: configurations
    shortNames:
      - config
      - cfg
    singular: configuration
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true
    - name: v1beta1
      served: true
      storage: false
    - name: v1
      served: true
      storage: false

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
  name: images.caching.internal.knative.dev
spec:
  group: caching.internal.knative.dev
  names:
    categories:
      - knative-internal
      - caching
    kind: Image
    plural: images
    shortNames:
      - img
    singular: image
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: ingresses.networking.internal.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: Ingress
    plural: ingresses
    shortNames:
      - ing
    singular: ingress
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: metrics.autoscaling.internal.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: autoscaling.internal.knative.dev
  names:
    categories:
      - knative-internal
      - autoscaling
    kind: Metric
    plural: metrics
    singular: metric
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: podautoscalers.autoscaling.internal.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.desiredScale
      name: DesiredScale
      type: integer
    - JSONPath: .status.actualScale
      name: ActualScale
      type: integer
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: autoscaling.internal.knative.dev
  names:
    categories:
      - knative-internal
      - autoscaling
    kind: PodAutoscaler
    plural: podautoscalers
    shortNames:
      - kpa
      - pa
    singular: podautoscaler
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: revisions.serving.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .metadata.labels['serving\.knative\.dev/configuration']
      name: Config Name
      type: string
    - JSONPath: .status.serviceName
      name: K8s Service Name
      type: string
    - JSONPath: .metadata.labels['serving\.knative\.dev/configurationGeneration']
      name: Generation
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Revision
    plural: revisions
    shortNames:
      - rev
    singular: revision
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true
    - name: v1beta1
      served: true
      storage: false
    - name: v1
      served: true
      storage: false

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: routes.serving.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.url
      name: URL
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Route
    plural: routes
    shortNames:
      - rt
    singular: route
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true
    - name: v1beta1
      served: true
      storage: false
    - name: v1
      served: true
      storage: false

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: "true"
    duck.knative.dev/podspecable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: services.serving.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .status.url
      name: URL
      type: string
    - JSONPath: .status.latestCreatedRevisionName
      name: LatestCreated
      type: string
    - JSONPath: .status.latestReadyRevisionName
      name: LatestReady
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Service
    plural: services
    shortNames:
      - kservice
      - ksvc
    singular: service
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true
    - name: v1beta1
      served: true
      storage: false
    - name: v1
      served: true
      storage: false

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/crd-install: "true"
    serving.knative.dev/release: "v0.11.2"
  name: serverlessservices.networking.internal.knative.dev
spec:
  additionalPrinterColumns:
    - JSONPath: .spec.mode
      name: Mode
      type: string
    - JSONPath: .status.serviceName
      name: ServiceName
      type: string
    - JSONPath: .status.privateServiceName
      name: PrivateServiceName
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: ServerlessService
    plural: serverlessservices
    shortNames:
      - sks
    singular: serverlessservice
  scope: Namespaced
  subresources:
    status: {}
  versions:
    - name: v1alpha1
      served: true
      storage: true

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: activator
    serving.knative.dev/release: "v0.11.2"
  name: activator-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8012
    - name: http2
      port: 81
      protocol: TCP
      targetPort: 8013
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: activator
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: controller
    serving.knative.dev/release: "v0.11.2"
  name: controller
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: controller

---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
    serving.knative.dev/release: "v0.11.2"
  name: webhook
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    role: webhook

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    name: webhook.serving.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: validation.webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    name: validation.webhook.serving.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config.webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    name: config.webhook.serving.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: webhook-certs
  namespace: {{ .Release.Namespace }}

---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: queue-proxy
  namespace: {{ .Release.Namespace }}
spec:
  image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:2a77ff74284f5eb6368d3ea80cbd9ef353dfebf7a8137cf81db94231435e1aea

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: activator
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: activator
        role: activator
        serving.knative.dev/release: "v0.11.2"
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/activator@sha256:c51023e62e351d5910f92ee941b4929eb82539e62636dd3ccb4a016d73e86b2e
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: activator
              path: /healthz
              port: 8012
          name: activator
          ports:
            - containerPort: 8012
              name: http1
            - containerPort: 8013
              name: h2c
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: activator
              path: /healthz
              port: 8012
          resources:
            limits:
              cpu: 1000m
              memory: 600Mi
            requests:
              cpu: 300m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: activator
  namespace: {{ .Release.Namespace }}
spec:
  maxReplicas: 20
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 100
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: activator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    autoscaling.knative.dev/autoscaler-provider: hpa
    serving.knative.dev/release: "v0.11.2"
  name: autoscaler-hpa
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler-hpa
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: autoscaler-hpa
        serving.knative.dev/release: "v0.11.2"
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler-hpa@sha256:75da5ff75bc1e71799d039846b1bbd632343894c88feaa59914cfeeb1b213c81
          name: autoscaler-hpa
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: autoscaler
    serving.knative.dev/release: "v0.11.2"
  name: autoscaler
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: https-custom-metrics
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: autoscaler

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: autoscaler
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/includeInboundPorts: 8080,9090
      labels:
        app: autoscaler
        serving.knative.dev/release: "v0.11.2"
    spec:
      containers:
        - args:
            - --secure-port=8443
            - --cert-dir=/tmp
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler@sha256:998a405454832cda18a4bf956d26d610a2df2130a39b834b597a89a3153c8c15
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
              path: /healthz
              port: 8080
          name: autoscaler
          ports:
            - containerPort: 8080
              name: websocket
            - containerPort: 9090
              name: metrics
            - containerPort: 8443
              name: custom-metrics
            - containerPort: 8008
              name: profiling
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
              path: /healthz
              port: 8080
          resources:
            limits:
              cpu: 300m
              memory: 400Mi
            requests:
              cpu: 30m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-autoscaler
  namespace: {{ .Release.Namespace }}

---

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-defaults
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # List of repositories for which tag to digest resolving should be skipped
    registriesSkippingTagResolving: "ko.local,dev.local"
  queueSidecarImage: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:2a77ff74284f5eb6368d3ea80cbd9ef353dfebf7a8137cf81db94231435e1aea
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-deployment
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-domain
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-gc
  namespace: {{ .Release.Namespace }}

---

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-logging
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-network
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-observability
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: config-tracing
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: controller
        serving.knative.dev/release: "v0.11.2"
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:1e77bdab30c8d0f0df299f5fa93d6f99eb63071b9d3329937dff0c6acb99e059
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller

---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: v1beta1.custom.metrics.k8s.io
spec:
  group: custom.metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: autoscaler
    namespace: {{ .Release.Namespace }}
  version: v1beta1
  versionPriority: 100

---

---

---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    serving.knative.dev/release: "v0.11.2"
  name: webhook
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "false"
      labels:
        app: webhook
        role: webhook
        serving.knative.dev/release: "v0.11.2"
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: gcr.io/knative-releases/knative.dev/serving/cmd/webhook@sha256:d07560cd5548640cc79abc819608844527351f10e8b0a847988f9eb602c18972
          name: webhook
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller

---
