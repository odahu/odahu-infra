
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    autoscaling.knative.dev/metric-provider: custom-metrics
    serving.knative.dev/release: "v0.11.2"
  name: custom-metrics-server-resources
rules:
  - apiGroups:
      - custom.metrics.k8s.io
    resources:
      - '*'
    verbs:
      - '*'

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-admin
  labels:
    serving.knative.dev/release: "v0.15.0"
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-controller-admin
  labels:
    serving.knative.dev/release: "v0.15.0"
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: knative-serving-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  name: queue-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:713bd548700bf7fe5452969611d1cc987051bd607d67a4e7623e140f06c209b2
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-autoscaler
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
data:
  progressDeadline: {{ .Values.progressDeadline | quote }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-domain
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-gc
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-leader-election
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-network
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-observability
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tracing
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"

---

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: activator
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  minReplicas: 1
  maxReplicas: 20
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: activator
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 100

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: activator
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: activator
        role: activator
        serving.knative.dev/release: "v0.15.0"
    spec:
      serviceAccountName: controller
      containers:
        - name: activator
          image: gcr.io/knative-releases/knative.dev/serving/cmd/activator@sha256:a5de0fb75046f2ad29a9394b9f4f31d258c4abaea3529cf3443d69e2aab1a879
          resources:
            requests:
              cpu: 300m
              memory: 60Mi
            limits:
              cpu: 1000m
              memory: 600Mi
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.14.10-gke.37"
            - name: GOGC
              value: "500"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            -
              name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: http1
              containerPort: 8012
            - name: h2c
              containerPort: 8013
          readinessProbe: &probe
            httpGet:
              port: 8012
              httpHeaders:
                - name: k-kubelet-probe
                  value: "activator"
            failureThreshold: 12
          livenessProbe: *probe

      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: activator-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: activator
    serving.knative.dev/release: "v0.15.0"
spec:
  selector:
    app: activator
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: http
      port: 80
      targetPort: 8012
    - name: http2
      port: 81
      targetPort: 8013
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscaler
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: autoscaler
        serving.knative.dev/release: "v0.15.0"
    spec:
      serviceAccountName: controller
      containers:
        - name: autoscaler
          image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler@sha256:61fc208b9c7923228275f8792288b3e356b2e80432655f237baafcf8ab7c3449
          resources:
            requests:
              cpu: 30m
              memory: 40Mi
            limits:
              cpu: 300m
              memory: 400Mi
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.14.10-gke.37"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: websocket
              containerPort: 8080
            - name: custom-metrics
              containerPort: 8443
          readinessProbe: &probe
            httpGet:
              port: 8080
              httpHeaders:
                - name: k-kubelet-probe
                  value: "autoscaler"
          livenessProbe: *probe
          args:
            - "--secure-port=8443"
            - "--cert-dir=/tmp"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: autoscaler
    serving.knative.dev/release: "v0.15.0"
  name: autoscaler
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: http
      port: 8080
      targetPort: 8080
    - name: https-custom-metrics
      port: 443
      targetPort: 8443
  selector:
    app: autoscaler

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: controller
        serving.knative.dev/release: "v0.15.0"
    spec:
      serviceAccountName: controller
      containers:
        - name: controller
          image: gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:51d92a912852f6bdc62468c7c3932e90786217425421c6b9f5366f4724b39fba
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.14.10-gke.37"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: controller
    serving.knative.dev/release: "v0.15.0"
  name: controller
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
  selector:
    app: controller

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"
spec:
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: webhook
        role: webhook
        serving.knative.dev/release: "v0.15.0"
    spec:
      serviceAccountName: controller
      containers:
        - name: webhook
          image: gcr.io/knative-releases/knative.dev/serving/cmd/webhook@sha256:bfb31793e70608a70a8e1c778b6183eba786bcd10491d84807d300accceb46b0
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 500Mi
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.14.10-gke.37"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
          readinessProbe: &probe
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          livenessProbe: *probe
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
    serving.knative.dev/release: "v0.15.0"
  name: webhook
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    role: webhook

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-addressable-resolver
  labels:
    serving.knative.dev/release: "v0.15.0"

    duck.knative.dev/addressable: "true"

rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    serving.knative.dev/release: "v0.15.0"
rules:
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["networking.internal.knative.dev", "autoscaling.internal.knative.dev",
                "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    serving.knative.dev/release: "v0.15.0"
rules:
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["create", "update", "patch", "delete"]
  - apiGroups: ["networking.internal.knative.dev", "autoscaling.internal.knative.dev",
                "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-namespaced-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    serving.knative.dev/release: "v0.15.0"
rules:
  - apiGroups: ["serving.knative.dev", "networking.internal.knative.dev", "autoscaling.internal.knative.dev",
                "caching.internal.knative.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-core
  labels:
    serving.knative.dev/release: "v0.15.0"
    serving.knative.dev/controller: "true"
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "secrets", "configmaps", "endpoints", "services",
                "events", "serviceaccounts"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: [""]
    resources: ["endpoints/restricted"]
    verbs: ["create"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions", "customresourcedefinitions/status"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["serving.knative.dev", "autoscaling.internal.knative.dev", "networking.internal.knative.dev"]
    resources: ["*", "*/status", "*/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
            "watch"]
  - apiGroups: ["caching.internal.knative.dev"]
    resources: ["images"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-podspecable-binding
  labels:
    serving.knative.dev/release: "v0.15.0"
    duck.knative.dev/podspecable: "true"
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - configurations
      - services
    verbs:
      - list
      - watch
      - patch

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.serving.knative.dev
  labels:
    serving.knative.dev/release: "v0.15.0"
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    sideEffects: None
    name: config.webhook.serving.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
    timeoutSeconds: 10

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.serving.knative.dev
  labels:
    serving.knative.dev/release: "v0.15.0"
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    sideEffects: None
    name: webhook.serving.knative.dev
    timeoutSeconds: 10

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.serving.knative.dev
  labels:
    serving.knative.dev/release: "v0.15.0"
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: {{ .Release.Namespace }}
    failurePolicy: Fail
    sideEffects: None
    name: validation.webhook.serving.knative.dev
    timeoutSeconds: 10

---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-certs
  namespace: {{ .Release.Namespace }}
  labels:
    serving.knative.dev/release: "v0.15.0"

---
