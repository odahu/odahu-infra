# Default values for knative-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Provide a name in place of knative-operator for `app:` labels
nameOverride: ""

# Provide a name to substitute for the full names of resources
fullnameOverride: ""

# Override the deployment namespace
namespaceOverride: ""

# Labels to apply to all resources
commonLabels: {}
# somevar: Testing

knativeOperator:
  enabled: true
  rbac:
    # if Kubernetes RBAC resources are created
    create: true

  # Knative-operator image
  image: gcr.io/knative-releases/knative.dev/operator/cmd/operator@sha256:17c0b3bce1fc27d7a8d3b37f44f862e6f26a776f03d4a19469440f8dab1d7778
  pullPolicy: IfNotPresent

  # Clean up custom resources created by Knative operator
  cleanupCustomResources:
    enabled: true

    # Image used in custom resources cleaning up job
    jobImage:
      repository: k8s.gcr.io/hyperkube-amd64
      tag: v1.16.10
      pullPolicy: IfNotPresent

  serviceAccount:
    create: true
    name: ""

  # Labels to add to the operator pod
  podLabels: {}

  # Resources for the operator pod
  podResources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 150m
      memory: 64Mi

  config:
    observability: {}
      # _example: |
      #   ################################
      #   #                              #
      #   #    EXAMPLE CONFIGURATION     #
      #   #                              #
      #   ################################

      #   # This block is not actually functional configuration,
      #   # but serves to illustrate the available configuration
      #   # options and document them in a way that is accessible
      #   # to users that `kubectl edit` this config map.
      #   #
      #   # These sample configuration options may be copied out of
      #   # this example block and unindented to be in the data block
      #   # to actually change the configuration.

      #   # logging.enable-var-log-collection defaults to false.
      #   # The fluentd daemon set will be set up to collect /var/log if
      #   # this flag is true.
      #   logging.enable-var-log-collection: false

      #   # logging.revision-url-template provides a template to use for producing the
      #   # logging URL that is injected into the status of each Revision.
      #   # This value is what you might use the the Knative monitoring bundle, and provides
      #   # access to Kibana after setting up kubectl proxy.
      #   logging.revision-url-template: |
      #     http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/discover?_a=(query:(match:(kubernetes.labels.serving-knative-dev%2FrevisionUID:(query:'${REVISION_UID}',type:phrase))))

      #   # If non-empty, this enables queue proxy writing request logs to stdout.
      #   # The value determines the shape of the request logs and it must be a valid go text/template.
      #   # It is important to keep this as a single line. Multiple lines are parsed as separate entities
      #   # by most collection agents and will split the request logs into multiple records.
      #   #
      #   # The following fields and functions are available to the template:
      #   #
      #   # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
      #   # representing an HTTP request received by the server.
      #   #
      #   # Response:
      #   # struct {
      #   #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
      #   #   Size    int       // An int representing the size of the response.
      #   #   Latency float64   // A float64 representing the latency of the response in seconds.
      #   # }
      #   #
      #   # Revision:
      #   # struct {
      #   #   Name          string  // Knative revision name
      #   #   Namespace     string  // Knative revision namespace
      #   #   Service       string  // Knative service name
      #   #   Configuration string  // Knative configuration name
      #   #   PodName       string  // Name of the pod hosting the revision
      #   #   PodIP         string  // IP of the pod hosting the revision
      #   # }
      #   #
      #   logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'

      #   # metrics.backend-destination field specifies the system metrics destination.
      #   # It supports either prometheus (the default) or stackdriver.
      #   # Note: Using stackdriver will incur additional charges
      #   metrics.backend-destination: prometheus

      #   # metrics.request-metrics-backend-destination specifies the request metrics
      #   # destination. If non-empty, it enables queue proxy to send request metrics.
      #   # Currently supported values: prometheus, stackdriver.
      #   metrics.request-metrics-backend-destination: prometheus

      #   # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
      #   # field is optional. When running on GCE, application default credentials will be
      #   # used if this field is not provided.
      #   metrics.stackdriver-project-id: "<your stackdriver project id>"

      #   # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
      #   # Stackdriver using "global" resource type and custom metric type if the
      #   # metrics are not supported by "knative_revision" resource type. Setting this
      #   # flag to "true" could cause extra Stackdriver charge.
      #   # If metrics.backend-destination is not Stackdriver, this is ignored.
      #   metrics.allow-stackdriver-custom-metrics: "false"

    logging: {}
      # _example: |
      #   ################################
      #   #                              #
      #   #    EXAMPLE CONFIGURATION     #
      #   #                              #
      #   ################################

      #   # This block is not actually functional configuration,
      #   # but serves to illustrate the available configuration
      #   # options and document them in a way that is accessible
      #   # to users that `kubectl edit` this config map.
      #   #
      #   # These sample configuration options may be copied out of
      #   # this example block and unindented to be in the data block
      #   # to actually change the configuration.

      #   # Common configuration for all Knative codebase
      #   zap-logger-config: |
      #     {
      #       "level": "info",
      #       "development": false,
      #       "outputPaths": ["stdout"],
      #       "errorOutputPaths": ["stderr"],
      #       "encoding": "json",
      #       "encoderConfig": {
      #         "timeKey": "ts",
      #         "levelKey": "level",
      #         "nameKey": "logger",
      #         "callerKey": "caller",
      #         "messageKey": "msg",
      #         "stacktraceKey": "stacktrace",
      #         "lineEnding": "",
      #         "levelEncoder": "",
      #         "timeEncoder": "iso8601",
      #         "durationEncoder": "",
      #         "callerEncoder": ""
      #       }
      #     }
    features:
      kubernetes.podspec-affinity: "enabled"
      kubernetes.podspec-nodeselector: "enabled"
      kubernetes.podspec-tolerations: "enabled"

knative:
  serving:
    # Create KnativeServing component or not
    create: false

    # Override namespace for Knative Serving components
    namespaceOverride: ""

    # https://github.com/knative/operator/blob/master/docs/configuration.md#specconfig
    spec: {}
    # spec:
    #   config:
    #     autoscaler:
    #       container-concurrency-target-default: "100"
    #       stable-window: 60s
    #     defaults:
    #       revision-timeout-seconds: "300"
    #     observability:
    #       metrics.backend-destination: prometheus

  eventing:
    # Create KnativeEventing component or not
    create: false

    # Override namespace for Knative Eventing components
    namespaceOverride: ""

    # https://github.com/knative/operator/blob/master/docs/configuration.md#specconfig
    spec: {}
