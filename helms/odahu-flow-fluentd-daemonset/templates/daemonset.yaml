apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "fluentd-daemonset.helm-labels" (dict "component" "fluentd-daemonset" "root" .) | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "fluentd-daemonset.helm-labels-for-search" (dict "component" "fluentd-daemonset" "root" .) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fluentd-daemonset.helm-labels" (dict "component" "fluentd-daemonset" "root" .) | nindent 8 }}
      {{- with .Values.fluentd.extraAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.fluentd.tolerations }}
      tolerations: {{ toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
      - name: fluentd
        command: ["fluentd"]
        args: ["-c", "/opt/fluent-config/fluent.conf"]
        image: "{{ include "fluentd.image-name" (dict "root" . "service" .Values.fluentd "tpl" "%sodahu-flow-fluentd:%s") }}"
        {{- if .Values.fluentd.resources }}
        resources:
          {{- toYaml .Values.fluentd.resources | nindent 10 }}
        {{- end }}
        env:
        - name: FLUENTD_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- if .Values.fluentd.extraEnvs }}
        {{- toYaml .Values.fluentd.extraEnvs | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: fluentd-config
          mountPath: /opt/fluent-config
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: "{{ .Release.Name }}-config"

