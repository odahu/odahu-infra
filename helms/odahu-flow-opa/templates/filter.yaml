apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Release.Name }}
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      {{ .Values.authz.activationSelector }}: enabled
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
              subFilter:
                name: "envoy.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.jwt_authn
          config:
            providers:
              oidc:
                forward: false
                issuer: {{ .Values.authn.oidcIssuer }}
                {{- if .Values.authn.localJwks }}
                local_jwks:
                  inline_string: '{{ .Values.authn.localJwks }}'
                {{- else }}
                remote_jwks:
                  http_uri:
                    uri: {{ .Values.authn.oidcJwks }}
                    cluster: outbound|{{ .Values.authn.oidcPort }}||{{ .Values.authn.oidcHost }}
                    timeout:
                      seconds: 20
                  cache_duration:
                    seconds: 100
                {{- end }}
                payload_in_metadata: jwt_payload
            rules:
              - match:
                  prefix: /healthz
              - match:
                  prefix: /
                requires:
                  {{- if .Values.authn.enabled }}
                  provider_name: oidc
                  {{- else }}
                  allow_missing_or_failed: {}
                  {{- end }}
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
              subFilter:
                name: "envoy.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.ext_authz
          config:
            metadata_context_namespaces:
              - envoy.filters.http.jwt_authn
            grpc_service:
              timeout:
                seconds: 20
              google_grpc:
                {{- if .Values.authz.targetUri }}
                target_uri: {{ .Values.authz.targetUri }}
                {{- else }}
                target_uri: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:9191
                {{- end}}
                stat_prefix: "ext_authz"

